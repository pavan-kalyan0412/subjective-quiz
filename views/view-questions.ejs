<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>View Questions - <%= mainTopic.mainTopic %>: <%= subTopic.subTopic %></title>
  <script src="https://cdn.tailwindcss.com"></script>
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/themes/prism.min.css" />
  <style>
    body {
      font-family: 'Inter', sans-serif;
      background: linear-gradient(135deg, #000000, #3b82f6);
      min-height: 100vh;
      color: #1f2937;
    }
    .fade-in {
      animation: fadeIn 0.5s ease-in;
    }
    @keyframes fadeIn {
      0% { opacity: 0; transform: translateY(10px); }
      100% { opacity: 1; transform: translateY(0); }
    }
    .question-card {
      transition: transform 0.2s ease, box-shadow 0.2s ease;
    }
    .question-card:hover {
      transform: translateY(-4px);
      box-shadow: 0 10px 15px rgba(0, 0, 0, 0.2);
    }
    .modal {
      transition: opacity 0.3s ease, transform 0.3s ease;
      transform: scale(0.95);
    }
    .modal.show {
      transform: scale(1);
      opacity: 1;
    }
    pre, code {
      text-align: left;
      white-space: pre-wrap;
      font-family: 'Courier New', Courier, monospace;
      border-radius: 0.5rem;
    }
    .subjective-answer {
      white-space: pre-wrap;
      font-family: 'Inter', sans-serif;
    }
  </style>
</head>
<body class="flex flex-col items-center">
  <!-- Header -->
  <header class="w-full bg-white shadow-lg py-6">
    <div class="container mx-auto px-4">
      <h1 class="text-3xl font-bold text-gray-800">View Questions</h1>
      <p class="text-gray-600 mt-2">
        Main Topic: <span class="font-semibold"><%= mainTopic.mainTopic %></span> |
        Subtopic: <span class="font-semibold"><%= subTopic.subTopic %></span>
      </p>
    </div>
  </header>

  <!-- Main Content -->
  <main class="container mx-auto px-4 py-8 max-w-5xl">
    <!-- Questions List -->
    <div class="space-y-6">
      <% subTopic.questions.forEach((question, index) => { %>
        <div class="question-card bg-white p-6 rounded-xl shadow-lg fade-in" data-question-id="<%= question._id %>">
          <!-- Question Header -->
          <div class="flex justify-between items-center mb-4">
            <h3 class="text-xl font-semibold text-gray-800">Question <%= index + 1 %> (<%= question.questionType %>)</h3>
            <div class="space-x-2">
              <button onclick="openEditModal('<%= question._id %>', <%= index %>)" class="bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 transition">Edit</button>
              <button onclick="confirmDelete('<%= question._id %>')" class="bg-red-600 text-white px-4 py-2 rounded-lg hover:bg-red-700 transition">Delete</button>
            </div>
          </div>

          <!-- Question Content -->
          <% if (question.questionType === 'coding') { %>
            <label class="block text-sm font-medium text-gray-700">Question:</label>
            <pre class="bg-gray-100 p-4 rounded-lg"><code class="language-html"><%= question.question %></code></pre>
            <% if (question.imageUrl) { %>
              <img src="<%= question.imageUrl %>" alt="Question Image" class="mt-2 max-w-full h-auto rounded-lg border border-gray-200">
            <% } %>
          <% } else if (question.questionType === 'mcq') { %>
            <label class="block text-sm font-medium text-gray-700">Question: <%= question.question %></label>
            <div class="mt-2">
              <% question.options.forEach((option, optIndex) => { %>
                <p class="text-gray-700">
                  <%= String.fromCharCode(97 + optIndex) %>) <%= option %>
                  <% if (optIndex === question.correctOptionIndex) { %>
                    <span class="text-green-600 font-semibold">(Correct)</span>
                  <% } %>
                </p>
              <% }); %>
            </div>
          <% } else { %>
            <label class="block text-sm font-medium text-gray-700">Question: <%= question.question %></label>
          <% } %>

          <!-- Answer -->
          <div class="mt-4">
            <label class="block text-sm font-medium text-gray-700">Answer:</label>
            <% if (question.questionType === 'coding' && question.answer) { %>
              <pre class="bg-gray-100 p-4 rounded-lg"><code class="language-html"><%= question.answer %></code></pre>
            <% } else if (question.questionType === 'mcq' && question.correctOptionIndex !== null && question.options[question.correctOptionIndex]) { %>
              <p class="text-gray-800 bg-gray-50 p-3 rounded-lg"><%= question.options[question.correctOptionIndex] %></p>
            <% } else { %>
              <div class="text-gray-800 bg-gray-50 p-3 rounded-lg subjective-answer"><%= question.answer || 'N/A' %></div>
            <% } %>
          </div>

          <!-- Metadata -->
          <div class="mt-4 flex space-x-4">
            <div class="bg-blue-100 text-blue-800 px-3 py-1 rounded-full text-sm font-semibold">
              Timer: <%= question.timer %> minutes
            </div>
            <div class="bg-green-100 text-green-800 px-3 py-1 rounded-full text-sm font-semibold">
              Marks: <%= question.marks %>
            </div>
          </div>
        </div>
      <% }); %>
    </div>

    <!-- Total Timer -->
    <div class="mt-8 bg-white p-6 rounded-xl shadow-lg text-center">
      <h3 class="text-lg font-semibold text-gray-800">Total Timer Duration for All Questions: <span class="text-blue-600"><%= totalTimerDuration %> minutes</span></h3>
    </div>

    <!-- Back to Dashboard -->
    <div class="mt-6 text-center">
      <a href="/admin/dashboard" class="inline-block bg-gray-600 text-white px-6 py-3 rounded-lg hover:bg-gray-700 transition">Back to Dashboard</a>
    </div>
  </main>

  <!-- Edit Modal -->
  <div id="edit-modal" class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center hidden">
    <div class="modal bg-white p-6 rounded-xl max-w-2xl w-full">
      <h2 class="text-2xl font-bold text-gray-800 mb-4">Edit Question</h2>
      <form id="edit-question-form" action="/admin/update-question" method="POST" enctype="multipart/form-data">
        <input type="hidden" name="mainTopicId" value="<%= mainTopic._id %>">
        <input type="hidden" name="subTopicId" value="<%= subTopic._id %>">
        <input type="hidden" name="questionId" id="edit-question-id">

        <!-- Question Text -->
        <div class="mb-4">
          <label class="block text-sm font-medium text-gray-700">Question</label>
          <textarea id="edit-question-text" name="question" class="w-full mt-1 p-3 border border-gray-300 rounded-lg" rows="4" required></textarea>
        </div>

        <!-- Question Type -->
        <div class="mb-4">
          <label class="block text-sm font-medium text-gray-700">Question Type</label>
          <select id="edit-question-type" name="questionType" class="w-full mt-1 p-3 border border-gray-300 rounded-lg" onchange="toggleQuestionTypeFields()">
            <option value="subjective">Subjective</option>
            <option value="mcq">Multiple Choice (MCQ)</option>
            <option value="coding">Coding</option>
          </select>
        </div>

        <!-- MCQ Options -->
        <div id="mcq-options" class="mb-4 hidden">
          <label class="block text-sm font-medium text-gray-700">Options</label>
          <div id="options-container" class="space-y-2">
            <!-- Options will be dynamically added here -->
          </div>
          <button type="button" onclick="addOption()" class="mt-2 text-blue-600 hover:underline">Add Option</button>
          <div class="mt-4">
            <label class="block text-sm font-medium text-gray-700">Correct Option</label>
            <select id="edit-correct-option" name="correctOptionIndex" class="w-full mt-1 p-3 border border-gray-300 rounded-lg"></select>
          </div>
        </div>

        <!-- Answer -->
        <div id="answer-field" class="mb-4">
          <label class="block text-sm font-medium text-gray-700">Answer</label>
          <textarea id="edit-answer" name="answer" class="w-full mt-1 p-3 border border-gray-300 rounded-lg" rows="4"></textarea>
        </div>

        <!-- Image Upload for Coding Questions -->
        <div id="image-upload" class="mb-4 hidden">
          <label class="block text-sm font-medium text-gray-700">Image (Optional)</label>
          <input type="file" name="image" accept="image/jpeg,image/jpg,image/png" class="w-full mt-1 p-3 border border-gray-300 rounded-lg">
        </div>

        <!-- Timer and Marks -->
        <div class="grid grid-cols-2 gap-4 mb-4">
          <div>
            <label class="block text-sm font-medium text-gray-700">Timer (minutes)</label>
            <input type="number" id="edit-timer" name="timer" class="w-full mt-1 p-3 border border-gray-300 rounded-lg" min="0" required>
          </div>
          <div>
            <label class="block text-sm font-medium text-gray-700">Marks</label>
            <input type="number" id="edit-marks" name="marks" class="w-full mt-1 p-3 border border-gray-300 rounded-lg" min="0" required>
          </div>
        </div>

        <!-- Buttons -->
        <div class="flex justify-end space-x-2">
          <button type="button" onclick="closeEditModal()" class="bg-gray-300 text-gray-800 px-4 py-2 rounded-lg hover:bg-gray-400">Cancel</button>
          <button type="submit" class="bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700">Save Changes</button>
        </div>
      </form>
    </div>
  </div>

  <!-- Delete Confirmation Modal -->
  <div id="delete-modal" class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center hidden">
    <div class="modal bg-white p-6 rounded-xl max-w-md w-full">
      <h2 class="text-2xl font-bold text-gray-800 mb-4">Confirm Deletion</h2>
      <p class="text-gray-600 mb-6">Are you sure you want to delete this question? This action cannot be undone.</p>
      <div class="flex justify-end space-x-2">
        <button onclick="closeDeleteModal()" class="bg-gray-300 text-gray-800 px-4 py-2 rounded-lg hover:bg-gray-400">Cancel</button>
        <button onclick="deleteQuestion()" class="bg-red-600 text-white px-4 py-2 rounded-lg hover:bg-red-700">Delete</button>
      </div>
    </div>
  </div>

  <!-- Scripts -->
  <script src="https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/prism.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/components/prism-html.min.js"></script>
  <script>
    let currentQuestionId = null;
    const questions = <%- JSON.stringify(subTopic.questions) %>;

    function openEditModal(questionId, index) {
      currentQuestionId = questionId;
      const question = questions[index];

      // Populate form fields
      document.getElementById('edit-question-id').value = questionId;
      document.getElementById('edit-question-text').value = question.question;
      document.getElementById('edit-question-type').value = question.questionType;
      document.getElementById('edit-answer').value = question.answer || '';
      document.getElementById('edit-timer').value = question.timer || 0;
      document.getElementById('edit-marks').value = question.marks || 0;

      // Handle MCQ options
      const optionsContainer = document.getElementById('options-container');
      optionsContainer.innerHTML = '';
      const correctOptionSelect = document.getElementById('edit-correct-option');
      correctOptionSelect.innerHTML = '';
      if (question.questionType === 'mcq') {
        question.options.forEach((option, i) => {
          addOption(option, i);
        });
        updateCorrectOptionSelect();
        correctOptionSelect.value = question.correctOptionIndex !== null ? question.correctOptionIndex : 0;
      }

      // Show/hide fields based on question type
      toggleQuestionTypeFields();

      // Show modal
      document.getElementById('edit-modal').classList.remove('hidden');
      setTimeout(() => document.querySelector('#edit-modal .modal').classList.add('show'), 10);
    }

    function closeEditModal() {
      document.getElementById('edit-modal').classList.add('hidden');
      document.querySelector('#edit-modal .modal').classList.remove('show');
      currentQuestionId = null;
    }

    function toggleQuestionTypeFields() {
      const questionType = document.getElementById('edit-question-type').value;
      document.getElementById('mcq-options').classList.toggle('hidden', questionType !== 'mcq');
      document.getElementById('image-upload').classList.toggle('hidden', questionType !== 'coding');
      document.getElementById('answer-field').classList.toggle('hidden', questionType === 'mcq');
    }

    function addOption(value = '', index) {
      const optionsContainer = document.getElementById('options-container');
      const optionDiv = document.createElement('div');
      optionDiv.className = 'flex items-center space-x-2';
      optionDiv.innerHTML = `
        <input type="text" name="options[]" class="w-full p-2 border border-gray-300 rounded-lg" value="${value}" required>
        <button type="button" onclick="this.parentElement.remove(); updateCorrectOptionSelect();" class="text-red-600 hover:text-red-800">Remove</button>
      `;
      optionsContainer.appendChild(optionDiv);

      // Add input event listener to update dropdown as user types
      const input = optionDiv.querySelector('input');
      input.addEventListener('input', updateCorrectOptionSelect);

      updateCorrectOptionSelect();
    }

    function updateCorrectOptionSelect() {
      const options = document.querySelectorAll('#options-container input[name="options[]"]');
      const correctOptionSelect = document.getElementById('edit-correct-option');
      const currentValue = correctOptionSelect.value;
      correctOptionSelect.innerHTML = '';

      options.forEach((input, i) => {
        const optionEl = document.createElement('option');
        optionEl.value = i;
        optionEl.textContent = `Option ${i + 1}: ${input.value || '(Empty)'}`;
        correctOptionSelect.appendChild(optionEl);
      });

      // Restore previous selection if still valid, otherwise select the first option
      if (currentValue && parseInt(currentValue) < options.length) {
        correctOptionSelect.value = currentValue;
      } else if (options.length > 0) {
        correctOptionSelect.value = 0;
      }
    }

    function confirmDelete(questionId) {
      currentQuestionId = questionId;
      document.getElementById('delete-modal').classList.remove('hidden');
      setTimeout(() => document.querySelector('#delete-modal .modal').classList.add('show'), 10);
    }

    function closeDeleteModal() {
      document.getElementById('delete-modal').classList.add('hidden');
      document.querySelector('#delete-modal .modal').classList.remove('show');
      currentQuestionId = null;
    }

    async function deleteQuestion() {
      try {
        const response = await fetch('/admin/delete-question', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({
            mainTopicId: '<%= mainTopic._id %>',
            subTopicId: '<%= subTopic._id %>',
            questionId: currentQuestionId,
          }),
        });
        if (response.ok) {
          window.location.reload();
        } else {
          alert('Failed to delete question.');
        }
      } catch (error) {
        console.error('Error deleting question:', error);
        alert('An error occurred while deleting the question.');
      }
    }
  </script>
</body>
</html>